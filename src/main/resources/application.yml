server:
  port: ${PORT:8080}

spring:
  config:
    activate:
      on-profile: production

  cloud:
    gcp:
      sql:
        instance-connection-name: <your-gcp-project-id:your-region:your-db-instance>
        database-name: <your-db-name>

  jpa:
    properties:
      jakarta:
        persistence:
          sharedCache:
            mode: ALL

    hibernate:
      ddl-auto: update

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:mysql:///<app-name>?<your-gcp-project-id:your-region:your-db-instance>&usesocketFactory=com.google.cloud.sql.mysql.SocketFactory&user=<dbusername>&password=<dbpassword>
    password: <dbpassword>
  liquibase:
    change-log: classpath:db/changelog/changelog.yaml
  sql:
    init:
      continue-on-error: true
      mode: always

---
spring:
  jpa:
    properties:
      jakarta:
        persistence:
          sharedCache:
            mode: ALL

    hibernate:
      ddl-auto: create

    open-in-view: true

  datasource:
    url: jdbc:h2:mem:dev
    username: sa
    password: password
    driverClassName: org.h2.Driver

  liquibase:
    change-log: classpath:db/changelog/changelog.yaml

  cloud:
    gcp:
      sql:
        enabled: false

  mvc:
    log-resolved-exception: false

  output:
    ansi:
      enabled: always

  graphql:
    graphiql:
      enabled: true

logging:
  level:
    root: INFO